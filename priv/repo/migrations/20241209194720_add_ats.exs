defmodule Helpdesk.Repo.Migrations.AddAts do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :username, :text, null: false
      add :email, :text, null: false
      add :password_hash, :text, null: false
      add :role, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:postings, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :title, :text, null: false
      add :description, :text
      add :location, :text
      add :salary_range, :text
      add :employment_type, :text, null: false
      add :closing_date, :date
      add :status, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :company_id, :uuid, null: false
    end

    create table(:job_applications, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :submitted_at, :utc_datetime, null: false
      add :status, :text, null: false
      add :comments, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :applicant_id, :uuid, null: false
      add :posting_id, :uuid, null: false
    end

    create table(:interviews, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :scheduled_at, :utc_datetime, null: false
      add :location, :text
      add :interviewer, :text, null: false
      add :status, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :job_application_id,
          references(:job_applications,
            column: :id,
            name: "interviews_job_application_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "interviews_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:feedbacks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :feedback_text, :text, null: false
      add :given_at, :utc_datetime, null: false
      add :status, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :job_application_id,
          references(:job_applications,
            column: :id,
            name: "feedbacks_job_application_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "feedbacks_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:companies, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:postings) do
      modify :company_id,
             references(:companies,
               column: :id,
               name: "postings_company_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:companies) do
      add :name, :text, null: false
      add :industry, :text
      add :description, :text
      add :website, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:applicants, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:job_applications) do
      modify :applicant_id,
             references(:applicants,
               column: :id,
               name: "job_applications_applicant_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :posting_id,
             references(:postings,
               column: :id,
               name: "job_applications_posting_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:applicants) do
      add :first_name, :text, null: false
      add :last_name, :text, null: false
      add :email, :text, null: false
      add :phone, :text
      add :resume_url, :text
      add :linkedin_profile, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    alter table(:applicants) do
      remove :updated_at
      remove :inserted_at
      remove :linkedin_profile
      remove :resume_url
      remove :phone
      remove :email
      remove :last_name
      remove :first_name
    end

    drop constraint(:job_applications, "job_applications_applicant_id_fkey")

    drop constraint(:job_applications, "job_applications_posting_id_fkey")

    alter table(:job_applications) do
      modify :posting_id, :uuid
      modify :applicant_id, :uuid
    end

    drop table(:applicants)

    alter table(:companies) do
      remove :updated_at
      remove :inserted_at
      remove :website
      remove :description
      remove :industry
      remove :name
    end

    drop constraint(:postings, "postings_company_id_fkey")

    alter table(:postings) do
      modify :company_id, :uuid
    end

    drop table(:companies)

    drop constraint(:feedbacks, "feedbacks_job_application_id_fkey")

    drop constraint(:feedbacks, "feedbacks_user_id_fkey")

    drop table(:feedbacks)

    drop constraint(:interviews, "interviews_job_application_id_fkey")

    drop constraint(:interviews, "interviews_user_id_fkey")

    drop table(:interviews)

    drop table(:job_applications)

    drop table(:postings)

    drop table(:users)
  end
end
